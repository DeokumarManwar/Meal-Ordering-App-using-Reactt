{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dev\\\\Desktop\\\\React\\\\my-app14\\\\src\\\\pages\\\\QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from \"react\";\nimport { Route, useParams, Link, useRouteMatch, useLocation } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: \"q1\",\n  author: \"Deokumar\",\n  text: \"Learning React is fun!\"\n}, {\n  id: \"q2\",\n  author: \"Akanksha\",\n  text: \"Learning React is Great!\"\n}];\n\nconst QuoteDetail = () => {\n  _s();\n\n  const match = useRouteMatch();\n  const locationMatch = useLocation();\n  const params = useParams();\n  const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId); // console.log(params.quoteId);\n\n  console.log(match);\n  console.log(locationMatch); // console.log(params);\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Quote Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: match.path,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `${match.url}/comments`,\n          children: \"Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments`,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteDetail, \"EM78sNbH7CDbzSNUJ/VJV4d8gR0=\", false, function () {\n  return [useRouteMatch, useLocation, useParams];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"names":["Fragment","Route","useParams","Link","useRouteMatch","useLocation","Comments","HighlightedQuote","DUMMY_QUOTES","id","author","text","QuoteDetail","match","locationMatch","params","quote","find","quoteId","console","log","path","url"],"sources":["C:/Users/Dev/Desktop/React/my-app14/src/pages/QuoteDetail.js"],"sourcesContent":["import { Fragment } from \"react\";\nimport {\n  Route,\n  useParams,\n  Link,\n  useRouteMatch,\n  useLocation,\n} from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\n\nconst DUMMY_QUOTES = [\n  { id: \"q1\", author: \"Deokumar\", text: \"Learning React is fun!\" },\n  { id: \"q2\", author: \"Akanksha\", text: \"Learning React is Great!\" },\n];\n\nconst QuoteDetail = () => {\n  const match = useRouteMatch();\n  const locationMatch = useLocation();\n  const params = useParams();\n  const quote = DUMMY_QUOTES.find((quote) => quote.id === params.quoteId);\n  // console.log(params.quoteId);\n  console.log(match);\n  console.log(locationMatch);\n  // console.log(params);\n\n  if (!quote) {\n    return <p>No Quote Found</p>;\n  }\n\n  return (\n    <Fragment>\n      <HighlightedQuote text={quote.text} author={quote.author} />\n      {/* <Route path={`/quotes/${params.quoteId}`} exact> */}\n      <Route path={match.path} exact>\n        <div className=\"centered\">\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\n            Load Comments\n          </Link>\n        </div>\n      </Route>\n      {/* <Route path={`/quotes/${params.quoteId}/comments`} exact> */}\n      <Route path={`${match.path}/comments`} exact>\n        <Comments />\n      </Route>\n    </Fragment>\n  );\n};\n\nexport default QuoteDetail;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SACEC,KADF,EAEEC,SAFF,EAGEC,IAHF,EAIEC,aAJF,EAKEC,WALF,QAMO,kBANP;AAOA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;;AAEA,MAAMC,YAAY,GAAG,CACnB;EAAEC,EAAE,EAAE,IAAN;EAAYC,MAAM,EAAE,UAApB;EAAgCC,IAAI,EAAE;AAAtC,CADmB,EAEnB;EAAEF,EAAE,EAAE,IAAN;EAAYC,MAAM,EAAE,UAApB;EAAgCC,IAAI,EAAE;AAAtC,CAFmB,CAArB;;AAKA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACxB,MAAMC,KAAK,GAAGT,aAAa,EAA3B;EACA,MAAMU,aAAa,GAAGT,WAAW,EAAjC;EACA,MAAMU,MAAM,GAAGb,SAAS,EAAxB;EACA,MAAMc,KAAK,GAAGR,YAAY,CAACS,IAAb,CAAmBD,KAAD,IAAWA,KAAK,CAACP,EAAN,KAAaM,MAAM,CAACG,OAAjD,CAAd,CAJwB,CAKxB;;EACAC,OAAO,CAACC,GAAR,CAAYP,KAAZ;EACAM,OAAO,CAACC,GAAR,CAAYN,aAAZ,EAPwB,CAQxB;;EAEA,IAAI,CAACE,KAAL,EAAY;IACV,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,oBACE,QAAC,QAAD;IAAA,wBACE,QAAC,gBAAD;MAAkB,IAAI,EAAEA,KAAK,CAACL,IAA9B;MAAoC,MAAM,EAAEK,KAAK,CAACN;IAAlD;MAAA;MAAA;MAAA;IAAA,QADF,eAGE,QAAC,KAAD;MAAO,IAAI,EAAEG,KAAK,CAACQ,IAAnB;MAAyB,KAAK,MAA9B;MAAA,uBACE;QAAK,SAAS,EAAC,UAAf;QAAA,uBACE,QAAC,IAAD;UAAM,SAAS,EAAC,WAAhB;UAA4B,EAAE,EAAG,GAAER,KAAK,CAACS,GAAI,WAA7C;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAHF,eAWE,QAAC,KAAD;MAAO,IAAI,EAAG,GAAET,KAAK,CAACQ,IAAK,WAA3B;MAAuC,KAAK,MAA5C;MAAA,uBACE,QAAC,QAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAXF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD,CA/BD;;GAAMT,W;UACUR,a,EACQC,W,EACPH,S;;;KAHXU,W;AAiCN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}