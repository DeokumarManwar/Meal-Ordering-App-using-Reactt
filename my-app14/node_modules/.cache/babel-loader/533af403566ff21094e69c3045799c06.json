{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dev\\\\Desktop\\\\React\\\\my-app14\\\\src\\\\pages\\\\QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useEffect } from \"react\";\nimport { Route, useParams, Link, useRouteMatch } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\"; // const DUMMY_QUOTES = [\n//   { id: \"q1\", author: \"Deokumar\", text: \"Learning React is fun!\" },\n//   { id: \"q2\", author: \"Akanksha\", text: \"Learning React is Great!\" },\n// ];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteDetail = () => {\n  _s();\n\n  const match = useRouteMatch(); // const locationMatch = useLocation();\n\n  const params = useParams();\n  const {\n    quoteId\n  } = params;\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote\n  } = useHttp(getSingleQuote, true); // const quote = DUMMY_QUOTES.find((quote) => quote.id === params.quoteId);\n  // console.log(params.quoteId);\n\n  console.log(match); // console.log(locationMatch);\n  // console.log(params);\n\n  useEffect(() => {\n    // sendRequest(params.quoteId);\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === \"pending\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (!loadedQuote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Quote Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: loadedQuote.text,\n      author: loadedQuote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: match.path,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `${match.url}/comments`,\n          children: \"Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments`,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteDetail, \"ReE55aHqUtKiZnwE/wfMeyR9EWA=\", false, function () {\n  return [useRouteMatch, useParams, useHttp];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"names":["Fragment","useEffect","Route","useParams","Link","useRouteMatch","Comments","HighlightedQuote","LoadingSpinner","useHttp","getSingleQuote","QuoteDetail","match","params","quoteId","sendRequest","status","data","loadedQuote","console","log","text","author","path","url"],"sources":["C:/Users/Dev/Desktop/React/my-app14/src/pages/QuoteDetail.js"],"sourcesContent":["import { Fragment, useEffect } from \"react\";\nimport { Route, useParams, Link, useRouteMatch } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\n\n// const DUMMY_QUOTES = [\n//   { id: \"q1\", author: \"Deokumar\", text: \"Learning React is fun!\" },\n//   { id: \"q2\", author: \"Akanksha\", text: \"Learning React is Great!\" },\n// ];\n\nconst QuoteDetail = () => {\n  const match = useRouteMatch();\n  // const locationMatch = useLocation();\n  const params = useParams();\n  const { quoteId } = params;\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n  } = useHttp(getSingleQuote, true);\n  // const quote = DUMMY_QUOTES.find((quote) => quote.id === params.quoteId);\n  // console.log(params.quoteId);\n  console.log(match);\n  // console.log(locationMatch);\n  // console.log(params);\n\n  useEffect(() => {\n    // sendRequest(params.quoteId);\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n  if (!loadedQuote) {\n    return <p>No Quote Found</p>;\n  }\n\n  return (\n    <Fragment>\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\n      {/* <Route path={`/quotes/${params.quoteId}`} exact> */}\n      <Route path={match.path} exact>\n        <div className=\"centered\">\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\n            Load Comments\n          </Link>\n        </div>\n      </Route>\n      {/* <Route path={`/quotes/${params.quoteId}/comments`} exact> */}\n      <Route path={`${match.path}/comments`} exact>\n        <Comments />\n      </Route>\n    </Fragment>\n  );\n};\n\nexport default QuoteDetail;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,IAA3B,EAAiCC,aAAjC,QAAsD,kBAAtD;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,YAA/B,C,CAEA;AACA;AACA;AACA;;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACxB,MAAMC,KAAK,GAAGP,aAAa,EAA3B,CADwB,CAExB;;EACA,MAAMQ,MAAM,GAAGV,SAAS,EAAxB;EACA,MAAM;IAAEW;EAAF,IAAcD,MAApB;EACA,MAAM;IACJE,WADI;IAEJC,MAFI;IAGJC,IAAI,EAAEC;EAHF,IAIFT,OAAO,CAACC,cAAD,EAAiB,IAAjB,CAJX,CALwB,CAUxB;EACA;;EACAS,OAAO,CAACC,GAAR,CAAYR,KAAZ,EAZwB,CAaxB;EACA;;EAEAX,SAAS,CAAC,MAAM;IACd;IACAc,WAAW,CAACD,OAAD,CAAX;EACD,CAHQ,EAGN,CAACC,WAAD,EAAcD,OAAd,CAHM,CAAT;;EAKA,IAAIE,MAAM,KAAK,SAAf,EAA0B;IACxB,oBACE;MAAK,SAAS,EAAC,UAAf;MAAA,uBACE,QAAC,cAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAKD;;EACD,IAAI,CAACE,WAAL,EAAkB;IAChB,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,oBACE,QAAC,QAAD;IAAA,wBACE,QAAC,gBAAD;MAAkB,IAAI,EAAEA,WAAW,CAACG,IAApC;MAA0C,MAAM,EAAEH,WAAW,CAACI;IAA9D;MAAA;MAAA;MAAA;IAAA,QADF,eAGE,QAAC,KAAD;MAAO,IAAI,EAAEV,KAAK,CAACW,IAAnB;MAAyB,KAAK,MAA9B;MAAA,uBACE;QAAK,SAAS,EAAC,UAAf;QAAA,uBACE,QAAC,IAAD;UAAM,SAAS,EAAC,WAAhB;UAA4B,EAAE,EAAG,GAAEX,KAAK,CAACY,GAAI,WAA7C;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAHF,eAWE,QAAC,KAAD;MAAO,IAAI,EAAG,GAAEZ,KAAK,CAACW,IAAK,WAA3B;MAAuC,KAAK,MAA5C;MAAA,uBACE,QAAC,QAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAXF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD,CAjDD;;GAAMZ,W;UACUN,a,EAECF,S,EAMXM,O;;;KATAE,W;AAmDN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}