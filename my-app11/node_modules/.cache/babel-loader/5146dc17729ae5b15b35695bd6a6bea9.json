{"ast":null,"code":"// const redux = require(\"react-redux\");\n// import { createStore } from \"redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport counterReducer from \"./counter\";\nimport authReducer from \"./auth\"; // const initialCounterState = { counter: 0, showCounter: true };\n// const counterSlice = createSlice({\n//   name: \"counter\",\n//   initialState: initialCounterState,\n//   reducers: {\n//     increment(state) {\n//       state.counter++;\n//     },\n//     decrement(state) {\n//       state.counter--;\n//     },\n//     increase(state, action) {\n//       state.counter = state.counter + action.payload;\n//     },\n//     decrease(state, action) {\n//       state.counter = state.counter - action.payload;\n//     },\n//     toggleCounter(state) {\n//       state.showCounter = !state.showCounter;\n//     },\n//   },\n// });\n// const initialAuthState = {\n//   isAuthenticated: false,\n//   emailIsValid: false,\n//   passwordIsValid: false,\n// };\n// const authSlice = createSlice({\n//   name: \"authentication\",\n//   initialState: initialAuthState,\n//   reducers: {\n//     login(state) {\n//       state.isAuthenticated = true;\n//     },\n//     logout(state) {\n//       state.isAuthenticated = false;\n//     },\n//     emailIsValid(state) {\n//       state.emailIsValid = true;\n//     },\n//     makeEmailInvalid(state) {\n//       state.emailIsValid = false;\n//     },\n//     passwordIsValid(state) {\n//       state.passwordIsValid = true;\n//     },\n//     makePasswordInvalid(state) {\n//       state.passwordIsValid = false;\n//     },\n//   },\n// });\n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === \"increment\") {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if (action.type === \"increase\") {\n//     console.log(state.counter);\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if (action.type === \"decrease\") {\n//     return {\n//       counter: state.counter - action.amount,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if (action.type === \"decrement\") {\n//     return {\n//       counter: state.counter - 1,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if (action.type === \"toggle\") {\n//     return {\n//       counter: state.counter,\n//       showCounter: !state.showCounter,\n//     };\n//   }\n//   return state;\n// };\n// counterSlice.actions.toggleCounter;\n\nconst store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    Auth: authReducer\n  }\n});\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"names":["configureStore","counterReducer","authReducer","store","reducer","counter","Auth","authActions","authSlice","actions"],"sources":["C:/Users/Dev/Desktop/React/my-app11/src/store/index.js"],"sourcesContent":["// const redux = require(\"react-redux\");\r\n// import { createStore } from \"redux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport counterReducer from \"./counter\";\r\nimport authReducer from \"./auth\";\r\n// const initialCounterState = { counter: 0, showCounter: true };\r\n\r\n// const counterSlice = createSlice({\r\n//   name: \"counter\",\r\n//   initialState: initialCounterState,\r\n//   reducers: {\r\n//     increment(state) {\r\n//       state.counter++;\r\n//     },\r\n//     decrement(state) {\r\n//       state.counter--;\r\n//     },\r\n//     increase(state, action) {\r\n//       state.counter = state.counter + action.payload;\r\n//     },\r\n//     decrease(state, action) {\r\n//       state.counter = state.counter - action.payload;\r\n//     },\r\n//     toggleCounter(state) {\r\n//       state.showCounter = !state.showCounter;\r\n//     },\r\n//   },\r\n// });\r\n\r\n// const initialAuthState = {\r\n//   isAuthenticated: false,\r\n//   emailIsValid: false,\r\n//   passwordIsValid: false,\r\n// };\r\n\r\n// const authSlice = createSlice({\r\n//   name: \"authentication\",\r\n//   initialState: initialAuthState,\r\n//   reducers: {\r\n//     login(state) {\r\n//       state.isAuthenticated = true;\r\n//     },\r\n//     logout(state) {\r\n//       state.isAuthenticated = false;\r\n//     },\r\n//     emailIsValid(state) {\r\n//       state.emailIsValid = true;\r\n//     },\r\n//     makeEmailInvalid(state) {\r\n//       state.emailIsValid = false;\r\n//     },\r\n//     passwordIsValid(state) {\r\n//       state.passwordIsValid = true;\r\n//     },\r\n//     makePasswordInvalid(state) {\r\n//       state.passwordIsValid = false;\r\n//     },\r\n//   },\r\n// });\r\n\r\n// const counterReducer = (state = initialState, action) => {\r\n//   if (action.type === \"increment\") {\r\n//     return {\r\n//       counter: state.counter + 1,\r\n//       showCounter: state.showCounter,\r\n//     };\r\n//   }\r\n//   if (action.type === \"increase\") {\r\n//     console.log(state.counter);\r\n//     return {\r\n//       counter: state.counter + action.amount,\r\n//       showCounter: state.showCounter,\r\n//     };\r\n//   }\r\n//   if (action.type === \"decrease\") {\r\n//     return {\r\n//       counter: state.counter - action.amount,\r\n//       showCounter: state.showCounter,\r\n//     };\r\n//   }\r\n//   if (action.type === \"decrement\") {\r\n//     return {\r\n//       counter: state.counter - 1,\r\n//       showCounter: state.showCounter,\r\n//     };\r\n//   }\r\n//   if (action.type === \"toggle\") {\r\n//     return {\r\n//       counter: state.counter,\r\n//       showCounter: !state.showCounter,\r\n//     };\r\n//   }\r\n//   return state;\r\n// };\r\n\r\n// counterSlice.actions.toggleCounter;\r\n\r\nconst store = configureStore({\r\n  reducer: { counter: counterReducer, Auth: authReducer },\r\n});\r\n\r\nexport const authActions = authSlice.actions;\r\nexport default store;\r\n"],"mappings":"AAAA;AACA;AACA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,cAAP,MAA2B,WAA3B;AACA,OAAOC,WAAP,MAAwB,QAAxB,C,CACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMC,KAAK,GAAGH,cAAc,CAAC;EAC3BI,OAAO,EAAE;IAAEC,OAAO,EAAEJ,cAAX;IAA2BK,IAAI,EAAEJ;EAAjC;AADkB,CAAD,CAA5B;AAIA,OAAO,MAAMK,WAAW,GAAGC,SAAS,CAACC,OAA9B;AACP,eAAeN,KAAf"},"metadata":{},"sourceType":"module"}