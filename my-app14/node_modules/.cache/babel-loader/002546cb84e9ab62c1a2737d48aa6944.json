{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dev\\\\Desktop\\\\React\\\\my-app14\\\\src\\\\components\\\\comments\\\\Comments.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = () => {\n  _s();\n\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const [Comment, setComment] = useState();\n  const params = useParams();\n  const {\n    quoteId\n  } = params;\n  const {\n    sendRequest,\n    status,\n    data: loadedComments\n  } = useHttp(getAllComments);\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const AddedCommentHandler = () => {};\n\n  if (status === \"pending\") {\n    setComment( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this));\n  }\n\n  if (status === \"completed\" && !loadedComments && loadedComments.length === 0) {\n    setComment( /*#__PURE__*/_jsxDEV(CommentsList, {\n      comments: loadedComments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 16\n    }, this));\n  }\n\n  if (status === \"completed\" && !loadedComments && loadedComments.length === 0) {\n    setComment( /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: \"No comments were added yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 16\n    }, this));\n  }\n\n  console.log(Comment);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      quoteId: params.quoteId,\n      onAddedComment: AddedCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), Comment]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"zUnfKlIY5e5fH/HuFGtQU8TxFZQ=\", false, function () {\n  return [useParams, useHttp];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useState","useEffect","useParams","classes","NewCommentForm","useHttp","getAllComments","LoadingSpinner","CommentsList","Comments","isAddingComment","setIsAddingComment","Comment","setComment","params","quoteId","sendRequest","status","data","loadedComments","startAddCommentHandler","AddedCommentHandler","length","console","log","comments"],"sources":["C:/Users/Dev/Desktop/React/my-app14/src/components/comments/Comments.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const [Comment, setComment] = useState();\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const AddedCommentHandler = () => {};\n\n  if (status === \"pending\") {\n    setComment(\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (\n    status === \"completed\" &&\n    !loadedComments &&\n    loadedComments.length === 0\n  ) {\n    setComment(<CommentsList comments={loadedComments} />);\n  }\n\n  if (\n    status === \"completed\" &&\n    !loadedComments &&\n    loadedComments.length === 0\n  ) {\n    setComment(<p className=\"centered\">No comments were added yet</p>);\n  }\n  console.log(Comment);\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={params.quoteId}\n          onAddedComment={AddedCommentHandler}\n        />\n      )}\n      {Comment}\n    </section>\n  );\n};\n\nexport default Comments;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CAAC,KAAD,CAAtD;EACA,MAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,EAAtC;EACA,MAAMc,MAAM,GAAGZ,SAAS,EAAxB;EAEA,MAAM;IAAEa;EAAF,IAAcD,MAApB;EAEA,MAAM;IAAEE,WAAF;IAAeC,MAAf;IAAuBC,IAAI,EAAEC;EAA7B,IAAgDd,OAAO,CAACC,cAAD,CAA7D;EAEAL,SAAS,CAAC,MAAM;IACde,WAAW,CAACD,OAAD,CAAX;EACD,CAFQ,EAEN,CAACC,WAAD,EAAcD,OAAd,CAFM,CAAT;;EAIA,MAAMK,sBAAsB,GAAG,MAAM;IACnCT,kBAAkB,CAAC,IAAD,CAAlB;EACD,CAFD;;EAIA,MAAMU,mBAAmB,GAAG,MAAM,CAAE,CAApC;;EAEA,IAAIJ,MAAM,KAAK,SAAf,EAA0B;IACxBJ,UAAU,eACR;MAAK,SAAS,EAAC,UAAf;MAAA,uBACE,QAAC,cAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADQ,CAAV;EAKD;;EAED,IACEI,MAAM,KAAK,WAAX,IACA,CAACE,cADD,IAEAA,cAAc,CAACG,MAAf,KAA0B,CAH5B,EAIE;IACAT,UAAU,eAAC,QAAC,YAAD;MAAc,QAAQ,EAAEM;IAAxB;MAAA;MAAA;MAAA;IAAA,QAAD,CAAV;EACD;;EAED,IACEF,MAAM,KAAK,WAAX,IACA,CAACE,cADD,IAEAA,cAAc,CAACG,MAAf,KAA0B,CAH5B,EAIE;IACAT,UAAU,eAAC;MAAG,SAAS,EAAC,UAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAD,CAAV;EACD;;EACDU,OAAO,CAACC,GAAR,CAAYZ,OAAZ;EACA,oBACE;IAAS,SAAS,EAAET,OAAO,CAACsB,QAA5B;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEG,CAACf,eAAD,iBACC;MAAQ,SAAS,EAAC,KAAlB;MAAwB,OAAO,EAAEU,sBAAjC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ,EAOGV,eAAe,iBACd,QAAC,cAAD;MACE,OAAO,EAAEI,MAAM,CAACC,OADlB;MAEE,cAAc,EAAEM;IAFlB;MAAA;MAAA;MAAA;IAAA,QARJ,EAaGT,OAbH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD,CA5DD;;GAAMH,Q;UAGWP,S,EAIuCG,O;;;KAPlDI,Q;AA8DN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}