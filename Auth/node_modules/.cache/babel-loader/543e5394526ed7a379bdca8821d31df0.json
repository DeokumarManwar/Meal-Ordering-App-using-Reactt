{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dev\\\\Desktop\\\\React\\\\Auth\\\\src\\\\store\\\\auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet logoutTimer;\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: \"\",\n  isLoggedIn: false,\n  login: token => {},\n  logout: () => {}\n});\n\nconst calculateRemainingTime = expirationTime => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n  const remainingDuration = adjExpirationTime - currentTime;\n  return remainingDuration;\n};\n\nconst retrieveStoredToken = () => {\n  const storedToken = localStorage.getItem(\"token\");\n  const storedExpirationDate = localStorage.getItem(\"expirationTime\");\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\n\n  if (remainingTime <= 3600) {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expirationTime\");\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    duration: remainingTime\n  };\n};\n\nexport const AuthContextProvider = props => {\n  _s();\n\n  const tokenData = retrieveStoredToken();\n  let initialToken = 0;\n\n  if (tokenData) {\n    initialToken = tokenData.token;\n  }\n\n  const [token, setToken] = useState(initialToken);\n  const userIsLoggedIn = !!token; // truthy value of token\n\n  const logoutHandler = useCallback(() => {\n    setToken(null);\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expirationTime\");\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  }, []);\n\n  const loginHandler = (token, expirationTime) => {\n    setToken(token);\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"expirationTime\", expirationTime);\n    const remainingTime = calculateRemainingTime(expirationTime);\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n\n  useEffect(() => {\n    console.log(tokenData.duration);\n    logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n  }, [tokenData, logoutHandler]);\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"Lh1CfGbFk5nTLZoGW/pEiX6CFRc=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","logoutTimer","AuthContext","createContext","token","isLoggedIn","login","logout","calculateRemainingTime","expirationTime","currentTime","Date","getTime","adjExpirationTime","remainingDuration","retrieveStoredToken","storedToken","localStorage","getItem","storedExpirationDate","remainingTime","removeItem","duration","AuthContextProvider","props","tokenData","initialToken","setToken","userIsLoggedIn","logoutHandler","clearTimeout","loginHandler","setItem","setTimeout","console","log","contextValue","children"],"sources":["C:/Users/Dev/Desktop/React/Auth/src/store/auth-context.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\n\r\nlet logoutTimer;\r\n\r\nconst AuthContext = React.createContext({\r\n  token: \"\",\r\n  isLoggedIn: false,\r\n  login: (token) => {},\r\n  logout: () => {},\r\n});\r\n\r\nconst calculateRemainingTime = (expirationTime) => {\r\n  const currentTime = new Date().getTime();\r\n  const adjExpirationTime = new Date(expirationTime).getTime();\r\n  const remainingDuration = adjExpirationTime - currentTime;\r\n  return remainingDuration;\r\n};\r\n\r\nconst retrieveStoredToken = () => {\r\n  const storedToken = localStorage.getItem(\"token\");\r\n  const storedExpirationDate = localStorage.getItem(\"expirationTime\");\r\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\r\n  if (remainingTime <= 3600) {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"expirationTime\");\r\n    return null;\r\n  }\r\n  return { token: storedToken, duration: remainingTime };\r\n};\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const tokenData = retrieveStoredToken();\r\n  let initialToken = 0;\r\n  if (tokenData) {\r\n    initialToken = tokenData.token;\r\n  }\r\n  const [token, setToken] = useState(initialToken);\r\n\r\n  const userIsLoggedIn = !!token; // truthy value of token\r\n\r\n  const logoutHandler = useCallback(() => {\r\n    setToken(null);\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"expirationTime\");\r\n\r\n    if (logoutTimer) {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, []);\r\n\r\n  const loginHandler = (token, expirationTime) => {\r\n    setToken(token);\r\n    localStorage.setItem(\"token\", token);\r\n    localStorage.setItem(\"expirationTime\", expirationTime);\r\n    const remainingTime = calculateRemainingTime(expirationTime);\r\n\r\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(tokenData.duration);\r\n    logoutTimer = setTimeout(logoutHandler, tokenData.duration);\r\n  }, [tokenData, logoutHandler]);\r\n\r\n  const contextValue = {\r\n    token: token,\r\n    isLoggedIn: userIsLoggedIn,\r\n    login: loginHandler,\r\n    logout: logoutHandler,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}