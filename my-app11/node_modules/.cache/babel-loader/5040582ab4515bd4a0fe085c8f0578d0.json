{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dev\\\\Desktop\\\\React\\\\my-app11\\\\src\\\\components\\\\Auth.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { authActions } from \"../store\";\nimport classes from \"./Auth.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  _s();\n\n  let errorEmailMessage = false;\n  let errorPasswordMessage = false;\n  const email = useRef();\n  const password = useRef();\n  const dispatch = useDispatch();\n  const show = useSelector(state => state.Auth.isAuthenticated);\n  const emailvalid = useSelector(state => state.Auth.emailIsValid);\n  const passwordvalid = useSelector(state => state.Auth.passwordIsValid);\n  console.log(show, 1);\n\n  if (email.includes(\"@\")) {\n    dispatch(authActions.emailIsValid);\n  } else {\n    errorEmailMessage = true;\n  }\n\n  if (password.includes(\"1\")) {\n    dispatch(authActions.emailIsValid);\n  } else {\n    errorPasswordMessage = true;\n  }\n\n  const submitHandler = () => {\n    if (emailvalid && passwordvalid) dispatch(authActions.login());\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: !show && /*#__PURE__*/_jsxDEV(\"main\", {\n      className: classes.auth,\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.control,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              ref: email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.control,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password\",\n              ref: password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Auth, \"pzalkBGT8eOSXrL2ijnM83P7PYo=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["Fragment","useRef","useSelector","useDispatch","authActions","classes","Auth","errorEmailMessage","errorPasswordMessage","email","password","dispatch","show","state","isAuthenticated","emailvalid","emailIsValid","passwordvalid","passwordIsValid","console","log","includes","submitHandler","login","auth","control"],"sources":["C:/Users/Dev/Desktop/React/my-app11/src/components/Auth.js"],"sourcesContent":["import { Fragment, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { authActions } from \"../store\";\nimport classes from \"./Auth.module.css\";\n\nconst Auth = () => {\n  let errorEmailMessage = false;\n  let errorPasswordMessage = false;\n  const email = useRef();\n  const password = useRef();\n  const dispatch = useDispatch();\n  const show = useSelector((state) => state.Auth.isAuthenticated);\n  const emailvalid = useSelector((state) => state.Auth.emailIsValid);\n  const passwordvalid = useSelector((state) => state.Auth.passwordIsValid);\n  console.log(show, 1);\n\n  if (email.includes(\"@\")) {\n    dispatch(authActions.emailIsValid);\n  } else {\n    errorEmailMessage = true;\n  }\n\n  if (password.includes(\"1\")) {\n    dispatch(authActions.emailIsValid);\n  } else {\n    errorPasswordMessage = true;\n  }\n\n  const submitHandler = () => {\n    if (emailvalid && passwordvalid) dispatch(authActions.login());\n  };\n\n  return (\n    <Fragment>\n      {!show && (\n        <main className={classes.auth}>\n          <section>\n            <form onSubmit={submitHandler}>\n              <div className={classes.control}>\n                <label htmlFor=\"email\">Email</label>\n                <input type=\"email\" id=\"email\" ref={email} />\n              </div>\n              <div className={classes.control}>\n                <label htmlFor=\"password\">Password</label>\n                <input type=\"password\" id=\"password\" ref={password} />\n              </div>\n              <button>Login</button>\n            </form>\n          </section>\n        </main>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Auth;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,OAAOC,OAAP,MAAoB,mBAApB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACjB,IAAIC,iBAAiB,GAAG,KAAxB;EACA,IAAIC,oBAAoB,GAAG,KAA3B;EACA,MAAMC,KAAK,GAAGR,MAAM,EAApB;EACA,MAAMS,QAAQ,GAAGT,MAAM,EAAvB;EACA,MAAMU,QAAQ,GAAGR,WAAW,EAA5B;EACA,MAAMS,IAAI,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACP,IAAN,CAAWQ,eAAvB,CAAxB;EACA,MAAMC,UAAU,GAAGb,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACP,IAAN,CAAWU,YAAvB,CAA9B;EACA,MAAMC,aAAa,GAAGf,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACP,IAAN,CAAWY,eAAvB,CAAjC;EACAC,OAAO,CAACC,GAAR,CAAYR,IAAZ,EAAkB,CAAlB;;EAEA,IAAIH,KAAK,CAACY,QAAN,CAAe,GAAf,CAAJ,EAAyB;IACvBV,QAAQ,CAACP,WAAW,CAACY,YAAb,CAAR;EACD,CAFD,MAEO;IACLT,iBAAiB,GAAG,IAApB;EACD;;EAED,IAAIG,QAAQ,CAACW,QAAT,CAAkB,GAAlB,CAAJ,EAA4B;IAC1BV,QAAQ,CAACP,WAAW,CAACY,YAAb,CAAR;EACD,CAFD,MAEO;IACLR,oBAAoB,GAAG,IAAvB;EACD;;EAED,MAAMc,aAAa,GAAG,MAAM;IAC1B,IAAIP,UAAU,IAAIE,aAAlB,EAAiCN,QAAQ,CAACP,WAAW,CAACmB,KAAZ,EAAD,CAAR;EAClC,CAFD;;EAIA,oBACE,QAAC,QAAD;IAAA,UACG,CAACX,IAAD,iBACC;MAAM,SAAS,EAAEP,OAAO,CAACmB,IAAzB;MAAA,uBACE;QAAA,uBACE;UAAM,QAAQ,EAAEF,aAAhB;UAAA,wBACE;YAAK,SAAS,EAAEjB,OAAO,CAACoB,OAAxB;YAAA,wBACE;cAAO,OAAO,EAAC,OAAf;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADF,eAEE;cAAO,IAAI,EAAC,OAAZ;cAAoB,EAAE,EAAC,OAAvB;cAA+B,GAAG,EAAEhB;YAApC;cAAA;cAAA;cAAA;YAAA,QAFF;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAKE;YAAK,SAAS,EAAEJ,OAAO,CAACoB,OAAxB;YAAA,wBACE;cAAO,OAAO,EAAC,UAAf;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADF,eAEE;cAAO,IAAI,EAAC,UAAZ;cAAuB,EAAE,EAAC,UAA1B;cAAqC,GAAG,EAAEf;YAA1C;cAAA;cAAA;cAAA;YAAA,QAFF;UAAA;YAAA;YAAA;YAAA;UAAA,QALF,eASE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QATF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EAFJ;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD,CAhDD;;GAAMJ,I;UAKaH,W,EACJD,W,EACMA,W,EACGA,W;;;KARlBI,I;AAkDN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}