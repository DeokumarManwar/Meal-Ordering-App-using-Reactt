{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dev\\\\Desktop\\\\React\\\\my-app4\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer, useContext, useRef } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport AuthContext from \"../store/auth-context\";\nimport LoginJSX from \"./LoginJSX\";\nimport Button from \"../UI/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst allinonefunction = (state, action) => {\n  if (action.type === \"USER_INPUT_EMAIL\") {\n    return {\n      valueEmail: action.val,\n      isValidEmail: action.val.includes(\"@\")\n    };\n  }\n\n  if (action.type === \"INPUT_BLUR_EMAIL\") {\n    return {\n      valueEmail: state.value,\n      isValidEmail: state.value.includes(\"@\")\n    };\n  }\n\n  if (action.type === \"USER_INPUT_PASSWORD\") {\n    return {\n      valuePassword: action.val,\n      isValidPassword: action.value.trim().length > 7\n    };\n  }\n\n  if (action.type === \"USER_BLUR_PASSWORD\") {\n    return {\n      valuePassword: state.value,\n      isValidPassword: state.value.trim().length > 7\n    };\n  }\n\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\n\nconst Login = () => {\n  _s();\n\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [allinone, dispatchallinone] = useReducer(allinonefunction, {\n    valueEmail: \"\",\n    valuePassword: \"\",\n    isValidEmail: undefined,\n    isValidPassword: undefined\n  });\n  const authCtx = useContext(AuthContext);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  useEffect(() => {\n    console.log(\"Effect RUNNING\");\n    return () => {\n      console.log(\"Effect CleanUp\");\n    };\n  }, []);\n  const {\n    isValidEmail: emailIsValid\n  } = allinone;\n  const {\n    isValidPassword: passwordIsValid\n  } = allinone;\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log(\"Checking for validity!\");\n      setFormIsValid(passwordIsValid && passwordIsValid);\n    }, 500);\n    return () => {\n      console.log(\"Cleanup!\");\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = event => {\n    // setEnteredEmail(event.target.value);\n    dispatchEmail({\n      type: \"USER_INPUT_EMAIL\",\n      val: event.target.value\n    }); // setFormIsValid(event.target.value.includes(\"@\") && passwordState.isValid);\n  };\n\n  const passwordChangeHandler = event => {\n    // setEnteredPassword(event.target.value);\n    dispatchPassword({\n      type: \"USER_INPUT_PASSWORD\",\n      value: event.target.value\n    }); // setFormIsValid(emailState.isValid && event.target.value.trim().length > 6);\n  };\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.isValid);\n    dispatchEmail({\n      type: \"INPUT_BLUR_EMAIL\"\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(passwoed.isValid);\n    dispatchPassword({\n      type: \"INPUT_BLUR_PASSWORD\"\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    if (formIsValid) authCtx.onLogin(emailState.value, passwordState.value);else if (!emailIsValid) {\n      emailInputRef.current.focus();\n    } else {\n      passwordInputRef.current.focus();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(LoginJSX, {\n        ref: emailInputRef,\n        type: \"email\",\n        id: \"email\",\n        label: \"E-Mail\",\n        isValid: emailIsValid,\n        value: allinone.valueEmail,\n        onChange: emailChangeHandler,\n        onBlur: validateEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoginJSX, {\n        ref: passwordInputRef,\n        type: \"password\",\n        id: \"password\",\n        label: \"Password\",\n        isValid: passwordIsValid,\n        value: allinone.valuePassword,\n        onChange: passwordChangeHandler,\n        onBlur: validatePasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"2jwyolFzMCZJ85gtHrG/NGPu4TM=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","useContext","useRef","Card","classes","AuthContext","LoginJSX","Button","allinonefunction","state","action","type","valueEmail","val","isValidEmail","includes","value","valuePassword","isValidPassword","trim","length","isValid","Login","formIsValid","setFormIsValid","allinone","dispatchallinone","undefined","authCtx","emailInputRef","passwordInputRef","console","log","emailIsValid","passwordIsValid","identifier","setTimeout","clearTimeout","emailChangeHandler","event","dispatchEmail","target","passwordChangeHandler","dispatchPassword","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","emailState","passwordState","current","focus","login","actions","btn"],"sources":["C:/Users/Dev/Desktop/React/my-app4/src/components/Login/Login.js"],"sourcesContent":["import React, {\n  useState,\n  useEffect,\n  useReducer,\n  useContext,\n  useRef,\n} from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport AuthContext from \"../store/auth-context\";\nimport LoginJSX from \"./LoginJSX\";\nimport Button from \"../UI/Button/Button\";\n\nconst allinonefunction = (state, action) => {\n  if (action.type === \"USER_INPUT_EMAIL\") {\n    return {\n      valueEmail: action.val,\n      isValidEmail: action.val.includes(\"@\"),\n    };\n  }\n\n  if (action.type === \"INPUT_BLUR_EMAIL\") {\n    return { valueEmail: state.value, isValidEmail: state.value.includes(\"@\") };\n  }\n\n  if (action.type === \"USER_INPUT_PASSWORD\") {\n    return {\n      valuePassword: action.val,\n      isValidPassword: action.value.trim().length > 7,\n    };\n  }\n\n  if (action.type === \"USER_BLUR_PASSWORD\") {\n    return {\n      valuePassword: state.value,\n      isValidPassword: state.value.trim().length > 7,\n    };\n  }\n\n  return { value: \"\", isValid: false };\n};\n\nconst Login = () => {\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [allinone, dispatchallinone] = useReducer(allinonefunction, {\n    valueEmail: \"\",\n    valuePassword: \"\",\n    isValidEmail: undefined,\n    isValidPassword: undefined,\n  });\n\n  const authCtx = useContext(AuthContext);\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  useEffect(() => {\n    console.log(\"Effect RUNNING\");\n\n    return () => {\n      console.log(\"Effect CleanUp\");\n    };\n  }, []);\n\n  const { isValidEmail: emailIsValid } = allinone;\n\n  const { isValidPassword: passwordIsValid } = allinone;\n\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log(\"Checking for validity!\");\n      setFormIsValid(passwordIsValid && passwordIsValid);\n    }, 500);\n\n    return () => {\n      console.log(\"Cleanup!\");\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = (event) => {\n    // setEnteredEmail(event.target.value);\n    dispatchEmail({ type: \"USER_INPUT_EMAIL\", val: event.target.value });\n\n    // setFormIsValid(event.target.value.includes(\"@\") && passwordState.isValid);\n  };\n\n  const passwordChangeHandler = (event) => {\n    // setEnteredPassword(event.target.value);\n    dispatchPassword({\n      type: \"USER_INPUT_PASSWORD\",\n      value: event.target.value,\n    });\n\n    // setFormIsValid(emailState.isValid && event.target.value.trim().length > 6);\n  };\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.isValid);\n    dispatchEmail({ type: \"INPUT_BLUR_EMAIL\" });\n  };\n\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(passwoed.isValid);\n    dispatchPassword({ type: \"INPUT_BLUR_PASSWORD\" });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    if (formIsValid) authCtx.onLogin(emailState.value, passwordState.value);\n    else if (!emailIsValid) {\n      emailInputRef.current.focus();\n    } else {\n      passwordInputRef.current.focus();\n    }\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <LoginJSX\n          ref={emailInputRef}\n          type=\"email\"\n          id=\"email\"\n          label=\"E-Mail\"\n          isValid={emailIsValid}\n          value={allinone.valueEmail}\n          onChange={emailChangeHandler}\n          onBlur={validateEmailHandler}\n        />\n        <LoginJSX\n          ref={passwordInputRef}\n          type=\"password\"\n          id=\"password\"\n          label=\"Password\"\n          isValid={passwordIsValid}\n          value={allinone.valuePassword}\n          onChange={passwordChangeHandler}\n          onBlur={validatePasswordHandler}\n        />\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}